<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
	<!-- 전체조회 -->
	<select id="selectEmpList" resultType="EmpVO">
		select employee_id
		,
		first_name
		, last_name
		, email
		, phone_number
		, hire_date
		, job_id
		, salary
		, commission_pct
		, manager_id
		, department_id
		from employees
		order by
		employee_id

	</select>

	<!-- 단건조회 -->
	<select id="selectEmpInfo" parameterType="EmpVO"
		resultType="EmpVO">
		select employee_id
		, first_name
		, last_name
		, email
		,
		phone_number
		, hire_date
		, job_id
		, salary
		, commission_pct
		, manager_id
		,
		department_id
		from employees
		where employee_id = #{employeeId}
	</select>
	<!-- Mybatis PreparedStatment => 데이터 타입에 따른 작업 #{} : parameterType에 선언된 
		변수의 필드값 -->

	<!-- 등록 -->
	<insert id="insertEmInfo" parameterType="EmpVO">
	<selectKey keyProperty="employeeId"
			   resultType="Integer"
			   order="BEFORE">
		select NVL(MAX(employee_id), 0) + 1
		from employees
	</selectKey>
		insert into employees
		( 
		employee_id
		, last_name
		, email
		, job_id
		, hire_date
		<if test="salary > 0">
			, salary
		</if>
		)
		values
		(
		<!-- employees.seq.NEXTVAL -->
		#{employeeId}
		,#{lastName}
		,#{email}
		,#{jobId}
		<choose>
			<when test="hireDate != null">
				, #{hireDate}
			</when>
			<otherwise>
				,sysdate
			</otherwise>
		</choose>
		<if test="salary > 0">
			,#{salary}
		</if>
		)
	</insert>

	<!-- 수정 -->
	<update id="updateEmpInfo" parameterType="EmpVO">
		update employees
		set
		last_name = #{lastName}
		<if test="jobId != null and !jobId.equals('')">
			<!-- 특정 조건(test 속성)을 만족할때만 실행되는 구문 -->
			, job_id = #{jobId}
		</if>
		, hire_date = #{hireDate}
		where employee_id = #{employeeId}
	</update>

	<!-- 삭제 -->
	<delete id="deleteEmpInfo" parameterType="int">
		<!-- 객체가 아닌 기본 타입일 경우 매개변수 그대로 사용 -->
		delete from employees
		where employee_id = #{empId}
	</delete>

</mapper>